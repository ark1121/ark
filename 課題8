閾値128にて2値化された画像に対してラベリングを行う。
まず、2値化する前に原画像を白黒濃淡画像へ変換する。
そのためのコードを下記、および生成された画像を図8.1に示す。

ORG = imread('nekouc.jpg'); % 画像の読み込み
ORG = rgb2gray(ORG); % 白黒濃淡画像に変換
imagesc(ORG); colormap(gray); colorbar; % 画像の表示

![default](https://user-images.githubusercontent.com/32251528/35199258-89b5798a-ff47-11e7-8f33-e245b2804fc0.jpg)
図8.1 白黒濃淡画像

閾値128にて2値化を行うためのコードを下記、およびその生成画像を図8.2に示す。
また、その画像にラベリングするためのこーコードを下記、また画像を図8.3に示す。

![128 2](https://user-images.githubusercontent.com/32251528/35199260-8e627bcc-ff47-11e7-88f8-d6c6f7fe1bcd.jpg)
図8.2 閾値128で2値化

![128 2](https://user-images.githubusercontent.com/32251528/35199259-8aed947c-ff47-11e7-8986-15785e955fbf.jpg)
図8.3 閾値128で2値化した画像をラベリング

結果より、ラベリング処理を行うとその画像の濃淡を数値に照らし合わせて見る際、とても判りやすい事がわかった。
